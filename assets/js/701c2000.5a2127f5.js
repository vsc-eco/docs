"use strict";(self.webpackChunkvsc_docu=self.webpackChunkvsc_docu||[]).push([[69],{4866:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var r=t(5893),n=t(1151);const i={},c="Smart Contract Template",o={id:"References/Smart Contract Template",title:"Smart Contract Template",description:"Smart contracts on VSC are compiled using AssemblyScript. This is a template project to get started writing smart contracts.",source:"@site/docs/References/Smart Contract Template.md",sourceDirName:"References",slug:"/References/Smart Contract Template",permalink:"/docs/References/Smart Contract Template",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Block explorers",permalink:"/docs/Block-explorers"},next:{title:"Liquidity Providers (LPs)",permalink:"/docs/Roles/Liquidity Providers"}},l={},a=[{value:"General Tips",id:"general-tips",level:3},{value:"Scripts",id:"scripts",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Libraries",id:"libraries",level:2}];function d(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"smart-contract-template",children:"Smart Contract Template"}),"\n",(0,r.jsx)(s.p,{children:"Smart contracts on VSC are compiled using AssemblyScript. This is a template project to get started writing smart contracts."}),"\n",(0,r.jsx)(s.h3,{id:"general-tips",children:"General Tips"}),"\n",(0,r.jsxs)(s.p,{children:["For smart contract specific functionality, use the ",(0,r.jsx)(s.code,{children:"@vsc.eco/sdk/assembly"})," module. For more general functionality, use the ",(0,r.jsx)(s.code,{children:"assemblyscript/std/assembly"})," module. It contains useful data structures and functions that are usable in the smart contract."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," If you see a missing module error during testing, it is likely that that part of the AssemblyScript standard library is not yet supported by VSC contracts."]}),"\n",(0,r.jsx)(s.h2,{id:"scripts",children:"Scripts"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"deploy"}),": Compiles & deploys a release build of the smart contract.",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.strong,{children:"Note:"})," Ensure both ",(0,r.jsx)(s.code,{children:"HIVE_ACCOUNT_USERNAME"})," and ",(0,r.jsx)(s.code,{children:"HIVE_ACCOUNT_ACTIVE_PRIVATE_KEY"})," are set in your environment or in the ",(0,r.jsx)(s.code,{children:".env"})," file in the root of this project. They are both used to deploy the smart contract via a ",(0,r.jsx)(s.code,{children:"custom-json"})," operation on Hive."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"asbuild:debug"}),": Compiles a debug build of the smart contract. This is used in both test environments. Used to manually compile this for the code changes to be reflected in the tests."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"asbuild:debug-live"}),": Observes the changes in the smart contract and compiles a debug build on changes. This is best used in conjunction with ",(0,r.jsx)(s.code,{children:"test:debug"})," for a small feedback loop."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"test"}),": Runs the tests using ",(0,r.jsx)(s.code,{children:"jest"}),". This is good for CI or running individual tests without debugging support."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"test:debug"}),": Runs the tests using ",(0,r.jsx)(s.code,{children:"mocha"})," & ",(0,r.jsx)(s.code,{children:"vite"}),". This runs tests in the browser with sourcemap support allowing breakpoint debugging your smart contract with the original AssemblyScript source code."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"assembly"}),": Where your smart contract source code lives."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"build"}),": Where the build artifacts are placed."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scripts"}),": Where scripts live."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"tests"}),": Where your tests live."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"libraries",children:"Libraries"}),"\n",(0,r.jsx)(s.p,{children:"The following libraries are supported by VSC smart contracts:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"@vsc.eco/sdk/assembly"}),": The VSC smart contract SDK. This library serves general purposes and provides various smart contract specific functionality."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"as-bigint"}),": A very handy ",(0,r.jsx)(s.a,{href:"https://github.com/polywrap/as-bigint",children:"library for simple arithmetic"})," with large numbers. Also useful when an operation like taking the power of a number is required (",(0,r.jsx)(s.code,{children:"**"})," operator), as AssemblyScript does not natively support this."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>c});var r=t(7294);const n={},i=r.createContext(n);function c(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);