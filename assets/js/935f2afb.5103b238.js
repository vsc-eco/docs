"use strict";(self.webpackChunkvsc_docu=self.webpackChunkvsc_docu||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/Introduction","docId":"Introduction","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Why VSC?","href":"/docs/getting-started/why-vsc","docId":"getting-started/why-vsc","unlisted":false},{"type":"link","label":"Running a node","href":"/docs/getting-started/running-a-node","docId":"getting-started/Running a node","unlisted":false},{"type":"link","label":"Creating your first smart contract","href":"/docs/getting-started/creating-your-first-smart-contract","docId":"getting-started/first-smart-contract","unlisted":false},{"type":"link","label":"Smart Contract SDK","href":"/docs/getting-started/sdk","docId":"getting-started/sdk","unlisted":false}],"href":"/docs/getting-started/"},{"type":"category","label":"Resources","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Block Explorer","href":"/docs/Resources/block-explorer","docId":"Resources/block-explorer","unlisted":false}]},{"type":"link","label":"Cross Chain DeFi & Wrapping","href":"/docs/bitcoin-wrapping","docId":"bitcoin-wrapping","unlisted":false}]},"docs":{"bitcoin-wrapping":{"id":"bitcoin-wrapping","title":"Cross Chain DeFi & Wrapping","description":"VSC\'s mission extends beyond its innovative smart contract capabilities. It aspires to become the driving force behind the integration of various cryptocurrencies, starting with Bitcoin, into the HIVE ecosystem through a process known as wrapping. This approach paves the way for the seamless transfer and utilization of Bitcoin and potentially other cryptocurrencies within the HIVE network.","sidebar":"tutorialSidebar"},"getting-started/first-smart-contract":{"id":"getting-started/first-smart-contract","title":"Creating your first smart contract","description":"Prerequisites","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"To get started, check out \\"running a node\\"","sidebar":"tutorialSidebar"},"getting-started/Running a node":{"id":"getting-started/Running a node","title":"Running a node","description":"This tutorial will guide you through the process of setting up a VSC node .","sidebar":"tutorialSidebar"},"getting-started/sdk":{"id":"getting-started/sdk","title":"Smart Contract SDK","description":"VSC provides a robust Assemblyscript SDK for use within your smart contract.","sidebar":"tutorialSidebar"},"getting-started/why-vsc":{"id":"getting-started/why-vsc","title":"Why VSC?","description":"Before picking a technology to use in your project, it\'s important to research and evaluate each one to determine a best fit technology for your use case. This document will give you a rough overview of what VSC does and enough details to make an informed decision for your project.","sidebar":"tutorialSidebar"},"Introduction":{"id":"Introduction","title":"Introduction","description":"VSC (virtual smart chain) is a next generation smart contract L2 built on the Hive blockchain. VSC not only aims to bring smart contracts to Hive, but completely change the onboarding experience by introducing native lite accounts and cross chain login functionality, support decentralized and secure wrapping technology, and power the future of DAPPs on Hive. VSC operates as sidechain to Hive, this gives us a significant amount of flexibility to advance and build new features, along with the ability to scale the L2 network in the future. Using Hive as a clearing and synchronization method, VSC can push huge amounts of data with little to no overhead on the Hive L1. This approach allows VSC to inherit a lot of Hive\'s lower level functions such as feeless transactions and 3s block time. VSC uses Webassembly for smart contracts, which us to support any language that comiles down to native webassembly. The flexibility this gives to developers is emmense, where as EVM chains Solidity is the only option. Currently we support AssemblyScript (JavaScript like) with more languages to be added in the future as we vet and build out development tools for each programming language.","sidebar":"tutorialSidebar"},"Resources/block-explorer":{"id":"Resources/block-explorer","title":"Block Explorer","description":"A block explorer built by a community member (@techcoderx) is currently live, and the only block explorer available at hs point in time. Nonetheless, it supports important graphical functions for consuming & debugging VSC transcations","sidebar":"tutorialSidebar"}}}')}}]);