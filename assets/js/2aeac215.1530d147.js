"use strict";(self.webpackChunkvsc_docu=self.webpackChunkvsc_docu||[]).push([[439],{4565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var o=n(5893),s=n(1151);const i={},r=void 0,c={id:"tutorials/first-contract",title:"first-contract",description:"NOTE: THIS SECTION HAS NOT BEEN UPDATED FOR MAINNET VSC (PROCEED WITH CAUTION)",source:"@site/docs/tutorials/first-contract.md",sourceDirName:"tutorials",slug:"/tutorials/first-contract",permalink:"/docs/tutorials/first-contract",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"example-project-guess-game",permalink:"/docs/tutorials/example-project-guess-game"},next:{title:"invoke-contract",permalink:"/docs/tutorials/invoke-contract"}},l={},a=[{value:"NOTE: THIS SECTION HAS NOT BEEN UPDATED FOR MAINNET VSC (PROCEED WITH CAUTION)",id:"note-this-section-has-not-been-updated-for-mainnet-vsc-proceed-with-caution",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"NodeJS version 16",id:"nodejs-version-16",level:3},{value:"IPFS",id:"ipfs",level:3},{value:"Git",id:"git",level:3},{value:"Hive account",id:"hive-account",level:3},{value:"Environment setup",id:"environment-setup",level:3},{value:"Code the contract",id:"code-the-contract",level:3},{value:"Test",id:"test",level:3},{value:"Deploy",id:"deploy",level:3},{value:"Validate",id:"validate",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"note-this-section-has-not-been-updated-for-mainnet-vsc-proceed-with-caution",children:"NOTE: THIS SECTION HAS NOT BEEN UPDATED FOR MAINNET VSC (PROCEED WITH CAUTION)"}),"\n",(0,o.jsx)(t.h1,{id:"creating-your-first-smart-contract",children:"Creating your first smart contract"}),"\n",(0,o.jsxs)(t.p,{children:["This tutorial helps you to create your first simple ",(0,o.jsx)(t.code,{children:"Hello-world"})," smart contract!"]}),"\n",(0,o.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(t.h3,{id:"nodejs-version-16",children:"NodeJS version 16"}),"\n",(0,o.jsx)(t.p,{children:"Our current ecosystem uses NodeJS version 16 LTS."}),"\n",(0,o.jsxs)(t.p,{children:["You can download the installer for windows ",(0,o.jsx)(t.a,{href:"https://nodejs.org/dist/v16.20.2/node-v16.20.2-x64.msi",children:"here"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["If you are also using NodeJS for other projects, that require a different NodeJS version, we recommend ",(0,o.jsx)(t.a,{href:"https://github.com/coreybutler/nvm-windows",children:"nvm-windows (windows)"})," and ",(0,o.jsx)(t.a,{href:"https://github.com/nvm-sh/nvm",children:"nvm (linux)"}),". Nvm is an abbreviation for ",(0,o.jsx)(t.em,{children:"node version manager"})," and helps you to keep track and switch to multiple versions of node on one operating system."]}),"\n",(0,o.jsx)(t.h3,{id:"ipfs",children:"IPFS"}),"\n",(0,o.jsx)(t.p,{children:"You need IPFS to be able to ingest data into the VSC network."}),"\n",(0,o.jsxs)(t.p,{children:["For a user friendly desktop application you can use ",(0,o.jsx)(t.code,{children:"IPFS Desktop"}),". It is available for windows/ mac/ ubuntu ",(0,o.jsx)(t.a,{href:"https://docs.ipfs.tech/install/ipfs-desktop/#install-instructions",children:"here"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["For a more classical cli experience you can refer to the ",(0,o.jsx)(t.a,{href:"https://docs.ipfs.tech/install/command-line/#install-official-binary-distributions",children:"binary installation tutorials"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"git",children:"Git"}),"\n",(0,o.jsxs)(t.p,{children:["You need to install Git to clone the template repository. Refer to the ",(0,o.jsx)(t.a,{href:"https://git-scm.com/downloads",children:"official installation instructions"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"hive-account",children:"Hive account"}),"\n",(0,o.jsxs)(t.p,{children:["A Hive account is required to deploy the contract to the VSC network, if you dont have one already please visit ",(0,o.jsx)(t.a,{href:"https://signup.hive.io",children:"signup.hive.io"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"environment-setup",children:"Environment setup"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Clone our smart contract template repo locally: ",(0,o.jsx)(t.code,{children:"git clone https://github.com/vsc-eco/contract-template.git"})]}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"cd contract-template"})}),"\n",(0,o.jsxs)(t.li,{children:["Open with your favorite code editor. We recommend ",(0,o.jsx)(t.a,{href:"https://code.visualstudio.com/download",children:"visual studio code"})]}),"\n",(0,o.jsxs)(t.li,{children:["install the node modules: ",(0,o.jsx)(t.code,{children:"npm i"})]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"code-the-contract",children:"Code the contract"}),"\n",(0,o.jsxs)(t.p,{children:["The file that is used as an initial compilation target for the contract is ",(0,o.jsx)(t.code,{children:"assembly/index.ts"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"By default, it is filled with sample code. We will remove all existing code from the file so that it is empty."}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["For our simple example we will write a contract with one entrypoint that logs and stores ",(0,o.jsx)(t.code,{children:"Hello world"}),"."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"We start by defining an entrypoint method. The methods name is important, it is also the name that is used to interact with the contract afterwards!"}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["It is also important that you ",(0,o.jsx)(t.em,{children:"export"})," the method. Only exported methods can be used as contract entrypoints."]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"export function MyFirstContractTest(): void {\n  \n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Then we start populating this method with some code. We will use the built in ",(0,o.jsx)(t.code,{children:"console.log"})," mechanics to log and ",(0,o.jsx)(t.code,{children:"db.setObject()"})," from the VSC sdk to store data inside of the contract."]}),"\n",(0,o.jsxs)(t.p,{children:["To learn more about the exposed functionalities of the VSC sdk visit ",(0,o.jsx)(t.a,{href:"/docs/references/sdk",children:"this document"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'import { db } from \'@vsc.eco/sdk/assembly\';\n\nexport function myFirstContractTest(): void {\n  console.log("Hello world debug!")\n  db.setObject("my-storage-key", "Hello world prod!")\n}\n'})}),"\n",(0,o.jsx)(t.h3,{id:"test",children:"Test"}),"\n",(0,o.jsxs)(t.p,{children:["For testing our contract, we use ",(0,o.jsx)(t.a,{href:"https://jestjs.io/",children:(0,o.jsx)(t.em,{children:"jest"})}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["The file we are going to write our tests under is ",(0,o.jsx)(t.code,{children:"tests/index.ts"}),". It also contains sample code that can be removed. Don't remove the entire testing suite, though!"]}),"\n",(0,o.jsx)(t.p,{children:"The basic setup after the removal of the sample code looks like this."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'import {\n  contract,\n  reset,\n  stateCache,\n  setContractImport,\n} from "@vsc.eco/contract-testing-utils";\n\nimport { expect } from "chai";\nconst beforeAll = globalThis.beforeAll || globalThis.before;\n\nconst contractImport = import("../build/debug");\n\nbeforeAll(() => setContractImport(contractImport));\n\nbeforeEach(reset);\n\ndescribe("hello-world", () => {\n\n});\n'})}),"\n",(0,o.jsxs)(t.p,{children:["We can now start to implement our test. For that, we use ",(0,o.jsx)(t.em,{children:"jest's"})," commonly used ",(0,o.jsx)(t.code,{children:"it()"})," syntax and insert expect statements to the test suite can verify our results. For now, we will test if a contract invocation actually changes the contract state. This may look like this:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'import {\n  contract,\n  reset,\n  stateCache,\n  setContractImport,\n} from "@vsc.eco/contract-testing-utils";\n\nimport { expect } from "chai";\nconst beforeAll = globalThis.beforeAll || globalThis.before;\n\nconst contractImport = import("../build/debug");\n\nbeforeAll(() => setContractImport(contractImport));\n\nbeforeEach(reset);\n\ndescribe("hello-world", () => {\n  it("should set a value in persisting storage", () => {\n    contract.myFirstContractTest()\n  \n    expect(stateCache.get("my-storage-key")).to.equal("Hello world prod!");\n  });\n});\n\n'})}),"\n",(0,o.jsx)(t.p,{children:"But before we can execute the test, we need to compile our assembly script code to webassembly (the more generic, language agnostic compilation target)."}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"We need to recompile every time we have done some changes on the assembly script code!"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"For that we use:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"npm run asbuild:debug"})}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["As a side note, ",(0,o.jsx)(t.code,{children:"assembly/index.ts"})," is ",(0,o.jsx)(t.em,{children:"assembly script"})," code. It looks similar to typescript, but is a superset of it. The tests are written in ",(0,o.jsx)(t.em,{children:"typescript"})," and what is being compiled to a contract is just the ",(0,o.jsx)(t.em,{children:"assembly script"})," code."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Now we can run the tests with:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"npm run test"})}),"\n",(0,o.jsxs)(t.p,{children:["The tests should succeed and we should see the log ",(0,o.jsx)(t.code,{children:"Hello world debug!"})," in our console. If this is the case for you, you are good to go!"]}),"\n",(0,o.jsx)(t.h3,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"contract-template"})," repository contains a deployment script to upload your contract to the VSC network. Keep in mind that an IPFS client needs to be running for a successful operation."]}),"\n",(0,o.jsx)(t.p,{children:"We can run the deployment script with:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"npm run deploy"})}),"\n",(0,o.jsx)(t.h3,{id:"validate",children:"Validate"}),"\n",(0,o.jsxs)(t.p,{children:["The deployed contract should now be visible ",(0,o.jsx)(t.a,{href:"/docs/references/block-explorers#contract-information",children:"in the block explorer"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Now it's time to invoke our contract's ",(0,o.jsx)(t.code,{children:"MyFirstContractTest"})," method on the VSC network."]}),"\n",(0,o.jsxs)(t.p,{children:["For that, we are going to create a small demo application that makes use of the ",(0,o.jsx)(t.em,{children:"VSC client"}),". Please ",(0,o.jsx)(t.a,{href:"/docs/tutorials/invoke-contract",children:"refer to this guide"})," for how to do so. After you created the application and sent the transaction to the VSC network come back to this guide."]}),"\n",(0,o.jsx)(t.p,{children:"After a short amount of time, after the submission of the transaction, we should be able to see our transaction included in one of the latest VSC blocks."}),"\n",(0,o.jsxs)(t.p,{children:["First, we should see a ",(0,o.jsx)(t.code,{children:"CALL_CONTRACT"})," operation. This transaction is the directly linked to our transaction submission."]}),"\n",(0,o.jsxs)(t.p,{children:["In the consecutive block, we should see a ",(0,o.jsx)(t.code,{children:"CONTRACT_OUTPUT"})," transaction. This is the actual processed result by the network."]}),"\n",(0,o.jsxs)(t.p,{children:["We verify the functionality of our method, by checking the contract storage. Whilst the outputs of log method calls are also attached to a ",(0,o.jsx)(t.code,{children:"CONTRACT_OUTPUT"}),", it is ",(0,o.jsx)(t.em,{children:"NOT"})," the recommended way of debugging a contract on the live network."]}),"\n",(0,o.jsxs)(t.p,{children:["We expect the contract state to contain a key by the name of ",(0,o.jsx)(t.code,{children:"my-storage-key"})," with the value ",(0,o.jsx)(t.code,{children:"Hello world prod!"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["To check the contract's current state please refer to the ",(0,o.jsx)(t.a,{href:"/docs/references/api#contract-state",children:"API documentation"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"If your contract's state contains this data, congratulations! You have successfully created, tested and deployed your first contract on the VSC network!"})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var o=n(7294);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);